diff -urN beast-0.6.1.orig/bse/bseparam.h beast-0.6.1/bse/bseparam.h
--- beast-0.6.1.orig/bse/bseparam.h	2004-03-24 12:04:55.319968112 +0100
+++ beast-0.6.1/bse/bseparam.h	2004-03-24 12:06:22.436724352 +0100
@@ -59,7 +59,7 @@
 #define     bse_value_get_boxed          g_value_get_boxed
 #define     bse_value_set_boxed          g_value_set_boxed
 #define     bse_value_dup_boxed          g_value_dup_boxed
-#define     bse_value_take_boxed         g_value_set_boxed_take_ownership
+#define     bse_value_take_boxed         g_value_take_boxed
 
 
 /* --- convenience pspec constructors --- */
diff -urN beast-0.6.1.orig/sfi/sficxx.h beast-0.6.1/sfi/sficxx.h
--- beast-0.6.1.orig/sfi/sficxx.h	2004-03-24 12:04:55.239980272 +0100
+++ beast-0.6.1/sfi/sficxx.h	2004-03-24 12:08:02.281545632 +0100
@@ -993,7 +993,7 @@
       Type *t = rh.steal();
       boxed = t;
     }
-  g_value_set_boxed_take_ownership (dest_value, boxed);
+  g_value_take_boxed (dest_value, boxed);
 }
 
 template<typename SeqType> void
@@ -1025,7 +1025,7 @@
       typename SeqType::CSeq *t = sh.steal();
       boxed = t;
     }
-  g_value_set_boxed_take_ownership (dest_value, boxed);
+  g_value_take_boxed (dest_value, boxed);
 }
 
 template<typename Type> RecordHandle<Type>
diff -urN beast-0.6.1.orig/sfi/sfidl-corec.cc beast-0.6.1/sfi/sfidl-corec.cc
--- beast-0.6.1.orig/sfi/sfidl-corec.cc	2004-03-24 12:04:55.230981640 +0100
+++ beast-0.6.1/sfi/sfidl-corec.cc	2004-03-24 12:07:41.144758912 +0100
@@ -523,7 +523,7 @@
         printf ("%s_rec2boxed (const GValue *src_value, GValue *dest_value)\n", name.c_str());
         printf ("{\n");
         printf ("  SfiRec *rec = sfi_value_get_rec (src_value);\n");
-        printf ("  g_value_set_boxed_take_ownership (dest_value,\n");
+        printf ("  g_value_take_boxed (dest_value,\n");
         printf ("    rec ? %s_from_rec (rec) : NULL);\n", name.c_str());
         printf ("}\n");
         
@@ -772,7 +772,7 @@
         printf ("%s_seq2boxed (const GValue *src_value, GValue *dest_value)\n", name.c_str());
         printf ("{\n");
         printf ("  SfiSeq *seq = sfi_value_get_seq (src_value);\n");
-        printf ("  g_value_set_boxed_take_ownership (dest_value,\n");
+        printf ("  g_value_take_boxed (dest_value,\n");
         printf ("    seq ? %s_from_seq (seq) : NULL);\n", name.c_str());
         printf ("}\n");
         
diff -urN beast-0.6.1.orig/sfi/sfivalues.c beast-0.6.1/sfi/sfivalues.c
--- beast-0.6.1.orig/sfi/sfivalues.c	2004-03-24 12:04:55.223982704 +0100
+++ beast-0.6.1/sfi/sfivalues.c	2004-03-24 12:07:16.969434120 +0100
@@ -203,7 +203,7 @@
 {
   g_return_if_fail (SFI_VALUE_HOLDS_BBLOCK (value));
   
-  g_value_set_boxed_take_ownership (value, bblock);
+  g_value_take_boxed (value, bblock);
 }
 
 SfiFBlock*
@@ -240,7 +240,7 @@
 {
   g_return_if_fail (SFI_VALUE_HOLDS_FBLOCK (value));
   
-  g_value_set_boxed_take_ownership (value, fblock);
+  g_value_take_boxed (value, fblock);
 }
 
 GParamSpec*
@@ -303,7 +303,7 @@
 {
   g_return_if_fail (SFI_VALUE_HOLDS_SEQ (value));
   
-  g_value_set_boxed_take_ownership (value, seq);
+  g_value_take_boxed (value, seq);
 }
 
 SfiRec*
@@ -338,7 +338,7 @@
 {
   g_return_if_fail (SFI_VALUE_HOLDS_REC (value));
   
-  g_value_set_boxed_take_ownership (value, rec);
+  g_value_take_boxed (value, rec);
 }
 
 SfiProxy
